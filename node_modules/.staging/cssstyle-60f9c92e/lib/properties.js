'use strict';

// autogenerated

/*
 *
 * http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties
 */

var external_dependency_parsers_0 = require("./parsers.js");

var alignmentBaseline_export_definition;
alignmentBaseline_export_definition = {
  set: function (v) {
    this._setProperty('alignment-baseline', v);
  },
  get: function () {
    return this.getPropertyValue('alignment-baseline');
  },
  enumerable: true,
  configurable: true
};
var azimuth_export_definition;
azimuth_export_definition = {
  set: function (v) {
    var valueType = external_dependency_parsers_0.valueType(v);

    if (valueType === external_dependency_parsers_0.TYPES.ANGLE) {
      return this._setProperty('azimuth', external_dependency_parsers_0.parseAngle(v));
    }

    if (valueType === external_dependency_parsers_0.TYPES.KEYWORD) {
      var keywords = v.toLowerCase().trim().split(/\s+/);
      var hasBehind = false;

      if (keywords.length > 2) {
        return;
      }

      var behindIndex = keywords.indexOf('behind');
      hasBehind = behindIndex !== -1;

      if (keywords.length === 2) {
        if (!hasBehind) {
          return;
        }

        keywords.splice(behindIndex, 1);
      }

      if (keywords[0] === 'leftwards' || keywords[0] === 'rightwards') {
        if (hasBehind) {
          return;
        }

        return this._setProperty('azimuth', keywords[0]);
      }

      if (keywords[0] === 'behind') {
        return this._setProperty('azimuth', '180deg');
      }

      var deg;

      switch (keywords[0]) {
        case 'left-side':
          return this._setProperty('azimuth', '270deg');

        case 'far-left':
          return this._setProperty('azimuth', (hasBehind ? 240 : 300) + 'deg');

        case 'left':
          return this._setProperty('azimuth', (hasBehind ? 220 : 320) + 'deg');

        case 'center-left':
          return this._setProperty('azimuth', (hasBehind ? 200 : 340) + 'deg');

        case 'center':
          return this._setProperty('azimuth', (hasBehind ? 180 : 0) + 'deg');

        case 'center-right':
          return this._setProperty('azimuth', (hasBehind ? 160 : 20) + 'deg');

        case 'right':
          return this._setProperty('azimuth', (hasBehind ? 140 : 40) + 'deg');

        case 'far-right':
          return this._setProperty('azimuth', (hasBehind ? 120 : 60) + 'deg');

        case 'right-side':
          return this._setProperty('azimuth', '90deg');

        default:
          return;
      }
    }
  },
  get: function () {
    return this.getPropertyValue('azimuth');
  },
  enumerable: true,
  configurable: true
};
var backgroundColor_export_isValid, backgroundColor_export_definition;

var backgroundColor_local_var_parse = function parse(v) {
  var parsed = external_dependency_parsers_0.parseColor(v);

  if (parsed !== undefined) {
    return parsed;
  }

  if (external_dependency_parsers_0.valueType(v) === external_dependency_parsers_0.TYPES.KEYWORD && (v.toLowerCase() === 'transparent' || v.toLowerCase() === 'inherit')) {
    return v;
  }

  return undefined;
};

backgroundColor_export_isValid = function isValid(v) {
  return backgroundColor_local_var_parse(v) !== undefined;
};

backgroundColor_export_definition = {
  set: function (v) {
    var parsed = backgroundColor_local_var_parse(v);

    if (parsed === undefined) {
      return;
    }

    this._setProperty('background-color', parsed);
  },
  get: function () {
    return this.getPropertyValue('background-color');
  },
  enumerable: true,
  configurable: true
};
var backgroundImage_export_isValid, backgroundImage_export_definition;

var backgroundImage_local_var_parse = function parse(v) {
  var parsed = external_dependency_parsers_0.parseUrl(v);

  if (parsed !== undefined) {
    return parsed;
  }

  if (external_dependency_parsers_0.valueType(v) === external_dependency_parsers_0.TYPES.KEYWORD && (v.toLowerCase() === 'none' || v.toLowerCase() === 'inherit')) {
    return v;
  }

  return undefined;
};

backgroundImage_export_isValid = function isValid(v) {
  return backgroundImage_local_var_parse(v) !== undefined;
};

backgroundImage_export_definition = {
  set: function (v) {
    this._setProperty('background-image', backgroundImage_local_var_parse(v));
  },
  get: function () {
    return this.getPropertyValue('background-image');
  },
  enumerable: true,
  configurable: true
};
var backgroundRepeat_export_isValid, backgroundRepeat_export_definition;

var backgroundRepeat_local_var_parse = function parse(v) {
  if (external_dependency_parsers_0.valueType(v) === external_dependency_parsers_0.TYPES.KEYWORD && (v.toLowerCase() === 'repeat' || v.toLowerCase() === 'repeat-x' || v.toLowerCase() === 'repeat-y' || v.toLowerCase() === 'no-repeat' || v.toLowerCase() === 'inherit')) {
    return v;
  }

  return undefined;
};

backgroundRepeat_export_isValid = function isValid(v) {
  return backgroundRepeat_local_var_parse(v) !== undefined;
};

backgroundRepeat_export_definition = {
  set: function (v) {
    this._setProperty('background-repeat', backgroundRepeat_local_var_parse(v));
  },
  get: function () {
    return this.getPropertyValue('background-repeat');
  },
  enumerable: true,
  configurable: true
};
var backgroundAttachment_export_isValid, backgroundAttachment_export_definition;

var backgroundAttachment_local_var_isValid = backgroundAttachment_export_isValid = function isValid(v) {
  return external_dependency_parsers_0.valueType(v) === external_dependency_parsers_0.TYPES.KEYWORD && (v.toLowerCase() === 'scroll' || v.toLowerCase() === 'fixed' || v.toLowerCase() === 'inherit');
};

backgroundAttachment_export_definition = {
  set: function (v) {
    if (!backgroundAttachment_local_var_isValid(v)) {
      return;
    }

    this._setProperty('background-attachment', v);
  },
  get: function () {
    return this.getPropertyValue('background-attachment');
  },
  enumerable: true,
  configurable: true
};
var backgroundPosition_export_isValid, backgroundPosition_export_definition;
var backgroundPosition_local_var_valid_keywords = ['top', 'center', 'bottom', 'left', 'right'];

var backgroundPosition_local_var_parse = function parse(v) {
  if (v === '' || v === null) {
    return undefined;
  }

  var parts = v.split(/\s+/);

  if (parts.length > 2 || parts.length < 1) {
    return undefined;
  }

  var types = [];
  parts.forEach(function (part, index) {
    types[index] = external_dependency_parsers_0.valueType(part);
  });

  if (parts.length === 1) {
    if (types[0] === external_dependency_parsers_0.TYPES.LENGTH || types[0] === external_dependency_parsers_0.TYPES.PERCENT) {
      return v;
    }

    if (types[0] === external_dependency_parsers_0.TYPES.KEYWORD) {
      if (backgroundPosition_local_var_valid_keywords.indexOf(v.toLowerCase()) !== -1 || v.toLowerCase() === 'inherit') {
        return v;
      }
    }

    return undefined;
  }

  if ((types[0] === external_dependency_parsers_0.TYPES.LENGTH || types[0] === external_dependency_parsers_0.TYPES.PERCENT) && (types[1] === external_dependency_parsers_0.TYPES.LENGTH || types[1] === external_dependency_parsers_0.TYPES.PERCENT)) {
    return v;
  }

  if (types[0] !== external_dependency_parsers_0.TYPES.KEYWORD || types[1] !== external_dependency_parsers_0.TYPES.KEYWORD) {
    return undefined;
  }

  if (backgroundPosition_local_var_valid_keywords.indexOf(parts[0]) !== -1 && backgroundPosition_local_var_valid_keywords.indexOf(parts[1]) !== -1) {
    return v;
  }

  return undefined;
};

backgroundPosition_export_isValid = function isValid(v) {
  return backgroundPosition_local_var_parse(v) !== undefined;
};

backgroundPosition_export_definition = {
  set: function (v) {
    this._setProperty('background-position', backgroundPosition_local_var_parse(v));
  },
  get: function () {
    return this.getPropertyValue('background-position');
  },
  enumerable: true,
  configurable: true
};
var background_export_isValid, background_export_definition;
var background_local_var_shorthand_for = {
  'background-color': {
    isValid: backgroundColor_export_isValid,
    definition: backgroundColor_export_definition
  },
  'background-image': {
    isValid: backgroundImage_export_isValid,
    definition: backgroundImage_export_definition
  },
  'background-repeat': {
    isValid: backgroundRepeat_export_isValid,
    definition: backgroundRepeat_export_definition
  },
  'background-attachment': {
    isValid: backgroundAttachment_export_isValid,
    definition: backgroundAttachment_export_definition
  },
  'background-position': {
    isValid: backgroundPosition_export_isValid,
    definition: backgroundPosition_export_definition
  }
};

background_export_isValid = function isValid(v) {
  return external_dependency_parsers_0.shorthandParser(v, background_local_var_shorthand_for) !== undefined;
};

background_export_definition = {
  set: external_dependency_parsers_0.shorthandSetter('background', background_local_var_shorthand_for),
  get: external_dependency_parsers_0.shorthandGetter('background', background_local_var_shorthand_for),
  enumerable: true,
  configurable: true
};
var backgroundClip_export_definition;
backgroundClip_export_definition = {
  set: function (v) {
    this._setProperty('background-clip', v);
  },
  get: function () {
    return this.getPropertyValue('background-clip');
  },
  enumerable: true,
  configurable: true
};
var backgroundOrigin_export_definition;
backgroundOrigin_export_definition = {
  set: function (v) {
    this._setProperty('background-origin', v);
  },
  get: function () {
    return this.getPropertyValue('background-origin');
  },
  enumerable: true,
  configurable: true
};
var backgroundPositionX_export_definition;
backgroundPositionX_export_definition = {
  set: function (v) {
    this._setProperty('background-position-x', v);
  },
  get: function () {
    return this.getPropertyValue('background-position-x');
  },
  enumerable: true,
  configurable: true
};
var backgroundPositionY_export_definition;
backgroundPositionY_export_definition = {
  set: function (v) {
    this._setProperty('background-position-y', v);
  },
  get: function () {
    return this.getPropertyValue('background-position-y');
  },
  enumerable: true,
  configurable: true
};
var backgroundRepeatX_export_definition;
backgroundRepeatX_export_definition = {
  set: function (v) {
    this._setProperty('background-repeat-x', v);
  },
  get: function () {
    return this.getPropertyValue('background-repeat-x');
  },
  enumerable: true,
  configurable: true
};
var backgroundRepeatY_export_definition;
backgroundRepeatY_export_definition = {
  set: function (v) {
    this._setProperty('background-repeat-y', v);
  },
  get: function () {
    return this.getPropertyValue('background-repeat-y');
  },
  enumerable: true,
  configurable: true
};
var backgroundSize_export_definition;
backgroundSize_export_definition = {
  set: function (v) {
    this._setProperty('background-size', v);
  },
  get: function () {
    return this.getPropertyValue('background-size');
  },
  enumerable: true,
  configurable: true
};
var baselineShift_export_definition;
baselineShift_export_definition = {
  set: function (v) {
    this._setProperty('baseline-shift', v);
  },
  get: function () {
    return this.getPropertyValue('baseline-shift');
  },
  enumerable: true,
  configurable: true
};
var borderWidth_export_isValid, borderWidth_export_definition;
// the valid border-widths:
var borderWidth_local_var_widths = ['thin', 'medium', 'thick'];

borderWidth_export_isValid = function parse(v) {
  var length = external_dependency_parsers_0.parseLength(v);

  if (length !== undefined) {
    return true;
  }

  if (typeof v !== 'string') {
    return false;
  }

  if (v === '') {
    return true;
  }

  v = v.toLowerCase();

  if (borderWidth_local_var_widths.indexOf(v) === -1) {
    return false;
  }

  return true;
};

var borderWidth_local_var_isValid = borderWidth_export_isValid;

var borderWidth_local_var_parser = function (v) {
  var length = external_dependency_parsers_0.parseLength(v);

  if (length !== undefined) {
    return length;
  }

  if (borderWidth_local_var_isValid(v)) {
    return v.toLowerCase();
  }

  return undefined;
};

borderWidth_export_definition = {
  set: external_dependency_parsers_0.implicitSetter('border', 'width', borderWidth_local_var_isValid, borderWidth_local_var_parser),
  get: function () {
    return this.getPropertyValue('border-width');
  },
  enumerable: true,
  configurable: true
};
var borderStyle_export_isValid, borderStyle_export_definition;
// the valid border-styles:
var borderStyle_local_var_styles = ['none', 'hidden', 'dotted', 'dashed', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset'];

borderStyle_export_isValid = function parse(v) {
  return typeof v === 'string' && (v === '' || borderStyle_local_var_styles.indexOf(v) !== -1);
};

var borderStyle_local_var_isValid = borderStyle_export_isValid;

var borderStyle_local_var_parser = function (v) {
  if (borderStyle_local_var_isValid(v)) {
    return v.toLowerCase();
  }

  return undefined;
};

borderStyle_export_definition = {
  set: external_dependency_parsers_0.implicitSetter('border', 'style', borderStyle_local_var_isValid, borderStyle_local_var_parser),
  get: function () {
    return this.getPropertyValue('border-style');
  },
  enumerable: true,
  configurable: true
};
var borderColor_export_isValid, borderColor_export_definition;

borderColor_export_isValid = function parse(v) {
  if (typeof v !== 'string') {
    return false;
  }

  return v === '' || v.toLowerCase() === 'transparent' || external_dependency_parsers_0.valueType(v) === external_dependency_parsers_0.TYPES.COLOR;
};

var borderColor_local_var_isValid = borderColor_export_isValid;

var borderColor_local_var_parser = function (v) {
  if (borderColor_local_var_isValid(v)) {
    return v.toLowerCase();
  }

  return undefined;
};

borderColor_export_definition = {
  set: external_dependency_parsers_0.implicitSetter('border', 'color', borderColor_local_var_isValid, borderColor_local_var_parser),
  get: function () {
    return this.getPropertyValue('border-color');
  },
  enumerable: true,
  configurable: true
};
var border_export_isValid, border_export_definition;
var border_local_var_shorthand_for = {
  'border-width': {
    isValid: borderWidth_export_isValid,
    definition: borderWidth_export_definition
  },
  'border-style': {
    isValid: borderStyle_export_isValid,
    definition: borderStyle_export_definition
  },
  'border-color': {
    isValid: borderColor_export_isValid,
    definition: borderColor_export_definition
  }
};

var border_local_var_isValid = function isValid(v) {
  return external_dependency_parsers_0.shorthandParser(v, border_local_var_shorthand_for) !== undefined;
};

border_export_isValid = border_local_var_isValid;

var border_local_var_parser = function (v) {
  if (v.toString().toLowerCase() === 'none') {
    v = '';
  }

  if (border_local_var_isValid(v)) {
    return v;
  }

  return undefined;
};

var border_local_var_myShorthandSetter = external_dependency_parsers_0.shorthandSetter('border', border_local_var_shorthand_for);
var border_local_var_myShorthandGetter = external_dependency_parsers_0.shorthandGetter('border', border_local_var_shorthand_for);
border_export_definition = {
  set: function (v) {
    if (v.toString().toLowerCase() === 'none') {
      v = '';
    }

    border_local_var_myShorthandSetter.call(this, v);
    this.removeProperty('border-top');
    this.removeProperty('border-left');
    this.removeProperty('border-right');
    this.removeProperty('border-bottom');
    this._values['border-top'] = this._values.border;
    this._values['border-left'] = this._values.border;
    this._values['border-right'] = this._values.border;
    this._values['border-bottom'] = this._values.border;
  },
  get: border_local_var_myShorthandGetter,
  enumerable: true,
  configurable: true
};
var borderBottomWidth_export_isValid, borderBottomWidth_export_definition;
var borderBottomWidth_local_var_isValid = borderBottomWidth_export_isValid = borderWidth_export_isValid;
borderBottomWidth_export_definition = {
  set: function (v) {
    if (borderBottomWidth_local_var_isValid(v)) {
      this._setProperty('border-bottom-width', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-bottom-width');
  },
  enumerable: true,
  configurable: true
};
var borderBottomStyle_export_isValid, borderBottomStyle_export_definition;
borderBottomStyle_export_isValid = borderStyle_export_isValid;
borderBottomStyle_export_definition = {
  set: function (v) {
    if (borderStyle_export_isValid(v)) {
      if (v.toLowerCase() === 'none') {
        v = '';
        this.removeProperty('border-bottom-width');
      }

      this._setProperty('border-bottom-style', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-bottom-style');
  },
  enumerable: true,
  configurable: true
};
var borderBottomColor_export_isValid, borderBottomColor_export_definition;
var borderBottomColor_local_var_isValid = borderBottomColor_export_isValid = borderColor_export_isValid;
borderBottomColor_export_definition = {
  set: function (v) {
    if (borderBottomColor_local_var_isValid(v)) {
      this._setProperty('border-bottom-color', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-bottom-color');
  },
  enumerable: true,
  configurable: true
};
var borderBottom_export_isValid, borderBottom_export_definition;
var borderBottom_local_var_shorthand_for = {
  'border-bottom-width': {
    isValid: borderBottomWidth_export_isValid,
    definition: borderBottomWidth_export_definition
  },
  'border-bottom-style': {
    isValid: borderBottomStyle_export_isValid,
    definition: borderBottomStyle_export_definition
  },
  'border-bottom-color': {
    isValid: borderBottomColor_export_isValid,
    definition: borderBottomColor_export_definition
  }
};

var borderBottom_local_var_isValid = function isValid(v) {
  return external_dependency_parsers_0.shorthandParser(v, borderBottom_local_var_shorthand_for) !== undefined;
};

borderBottom_export_isValid = borderBottom_local_var_isValid;
borderBottom_export_definition = {
  set: external_dependency_parsers_0.shorthandSetter('border-bottom', borderBottom_local_var_shorthand_for),
  get: external_dependency_parsers_0.shorthandGetter('border-bottom', borderBottom_local_var_shorthand_for),
  enumerable: true,
  configurable: true
};
var borderBottomLeftRadius_export_definition;
borderBottomLeftRadius_export_definition = {
  set: function (v) {
    this._setProperty('border-bottom-left-radius', v);
  },
  get: function () {
    return this.getPropertyValue('border-bottom-left-radius');
  },
  enumerable: true,
  configurable: true
};
var borderBottomRightRadius_export_definition;
borderBottomRightRadius_export_definition = {
  set: function (v) {
    this._setProperty('border-bottom-right-radius', v);
  },
  get: function () {
    return this.getPropertyValue('border-bottom-right-radius');
  },
  enumerable: true,
  configurable: true
};
var borderCollapse_export_isValid, borderCollapse_export_definition;

var borderCollapse_local_var_parse = function parse(v) {
  if (external_dependency_parsers_0.valueType(v) === external_dependency_parsers_0.TYPES.KEYWORD && (v.toLowerCase() === 'collapse' || v.toLowerCase() === 'separate' || v.toLowerCase() === 'inherit')) {
    return v;
  }

  return undefined;
};

borderCollapse_export_isValid = function isValid(v) {
  return borderCollapse_local_var_parse(v) !== undefined;
};

borderCollapse_export_definition = {
  set: function (v) {
    this._setProperty('border-collapse', borderCollapse_local_var_parse(v));
  },
  get: function () {
    return this.getPropertyValue('border-collapse');
  },
  enumerable: true,
  configurable: true
};
var borderImage_export_definition;
borderImage_export_definition = {
  set: function (v) {
    this._setProperty('border-image', v);
  },
  get: function () {
    return this.getPropertyValue('border-image');
  },
  enumerable: true,
  configurable: true
};
var borderImageOutset_export_definition;
borderImageOutset_export_definition = {
  set: function (v) {
    this._setProperty('border-image-outset', v);
  },
  get: function () {
    return this.getPropertyValue('border-image-outset');
  },
  enumerable: true,
  configurable: true
};
var borderImageRepeat_export_definition;
borderImageRepeat_export_definition = {
  set: function (v) {
    this._setProperty('border-image-repeat', v);
  },
  get: function () {
    return this.getPropertyValue('border-image-repeat');
  },
  enumerable: true,
  configurable: true
};
var borderImageSlice_export_definition;
borderImageSlice_export_definition = {
  set: function (v) {
    this._setProperty('border-image-slice', v);
  },
  get: function () {
    return this.getPropertyValue('border-image-slice');
  },
  enumerable: true,
  configurable: true
};
var borderImageSource_export_definition;
borderImageSource_export_definition = {
  set: function (v) {
    this._setProperty('border-image-source', v);
  },
  get: function () {
    return this.getPropertyValue('border-image-source');
  },
  enumerable: true,
  configurable: true
};
var borderImageWidth_export_definition;
borderImageWidth_export_definition = {
  set: function (v) {
    this._setProperty('border-image-width', v);
  },
  get: function () {
    return this.getPropertyValue('border-image-width');
  },
  enumerable: true,
  configurable: true
};
var borderLeftWidth_export_isValid, borderLeftWidth_export_definition;
var borderLeftWidth_local_var_isValid = borderLeftWidth_export_isValid = borderWidth_export_isValid;
borderLeftWidth_export_definition = {
  set: function (v) {
    if (borderLeftWidth_local_var_isValid(v)) {
      this._setProperty('border-left-width', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-left-width');
  },
  enumerable: true,
  configurable: true
};
var borderLeftStyle_export_isValid, borderLeftStyle_export_definition;
borderLeftStyle_export_isValid = borderStyle_export_isValid;
borderLeftStyle_export_definition = {
  set: function (v) {
    if (borderStyle_export_isValid(v)) {
      if (v.toLowerCase() === 'none') {
        v = '';
        this.removeProperty('border-left-width');
      }

      this._setProperty('border-left-style', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-left-style');
  },
  enumerable: true,
  configurable: true
};
var borderLeftColor_export_isValid, borderLeftColor_export_definition;
var borderLeftColor_local_var_isValid = borderLeftColor_export_isValid = borderColor_export_isValid;
borderLeftColor_export_definition = {
  set: function (v) {
    if (borderLeftColor_local_var_isValid(v)) {
      this._setProperty('border-left-color', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-left-color');
  },
  enumerable: true,
  configurable: true
};
var borderLeft_export_isValid, borderLeft_export_definition;
var borderLeft_local_var_shorthand_for = {
  'border-left-width': {
    isValid: borderLeftWidth_export_isValid,
    definition: borderLeftWidth_export_definition
  },
  'border-left-style': {
    isValid: borderLeftStyle_export_isValid,
    definition: borderLeftStyle_export_definition
  },
  'border-left-color': {
    isValid: borderLeftColor_export_isValid,
    definition: borderLeftColor_export_definition
  }
};

var borderLeft_local_var_isValid = function isValid(v) {
  return external_dependency_parsers_0.shorthandParser(v, borderLeft_local_var_shorthand_for) !== undefined;
};

borderLeft_export_isValid = borderLeft_local_var_isValid;
borderLeft_export_definition = {
  set: external_dependency_parsers_0.shorthandSetter('border-left', borderLeft_local_var_shorthand_for),
  get: external_dependency_parsers_0.shorthandGetter('border-left', borderLeft_local_var_shorthand_for),
  enumerable: true,
  configurable: true
};
var borderRadius_export_definition;
borderRadius_export_definition = {
  set: function (v) {
    this._setProperty('border-radius', v);
  },
  get: function () {
    return this.getPropertyValue('border-radius');
  },
  enumerable: true,
  configurable: true
};
var borderRightWidth_export_isValid, borderRightWidth_export_definition;
var borderRightWidth_local_var_isValid = borderRightWidth_export_isValid = borderWidth_export_isValid;
borderRightWidth_export_definition = {
  set: function (v) {
    if (borderRightWidth_local_var_isValid(v)) {
      this._setProperty('border-right-width', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-right-width');
  },
  enumerable: true,
  configurable: true
};
var borderRightStyle_export_isValid, borderRightStyle_export_definition;
borderRightStyle_export_isValid = borderStyle_export_isValid;
borderRightStyle_export_definition = {
  set: function (v) {
    if (borderStyle_export_isValid(v)) {
      if (v.toLowerCase() === 'none') {
        v = '';
        this.removeProperty('border-right-width');
      }

      this._setProperty('border-right-style', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-right-style');
  },
  enumerable: true,
  configurable: true
};
var borderRightColor_export_isValid, borderRightColor_export_definition;
var borderRightColor_local_var_isValid = borderRightColor_export_isValid = borderColor_export_isValid;
borderRightColor_export_definition = {
  set: function (v) {
    if (borderRightColor_local_var_isValid(v)) {
      this._setProperty('border-right-color', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-right-color');
  },
  enumerable: true,
  configurable: true
};
var borderRight_export_isValid, borderRight_export_definition;
var borderRight_local_var_shorthand_for = {
  'border-right-width': {
    isValid: borderRightWidth_export_isValid,
    definition: borderRightWidth_export_definition
  },
  'border-right-style': {
    isValid: borderRightStyle_export_isValid,
    definition: borderRightStyle_export_definition
  },
  'border-right-color': {
    isValid: borderRightColor_export_isValid,
    definition: borderRightColor_export_definition
  }
};

var borderRight_local_var_isValid = function isValid(v) {
  return external_dependency_parsers_0.shorthandParser(v, borderRight_local_var_shorthand_for) !== undefined;
};

borderRight_export_isValid = borderRight_local_var_isValid;
borderRight_export_definition = {
  set: external_dependency_parsers_0.shorthandSetter('border-right', borderRight_local_var_shorthand_for),
  get: external_dependency_parsers_0.shorthandGetter('border-right', borderRight_local_var_shorthand_for),
  enumerable: true,
  configurable: true
};
var borderSpacing_export_isValid, borderSpacing_export_definition;

// <length> <length>? | inherit
// if one, it applies to both horizontal and verical spacing
// if two, the first applies to the horizontal and the second applies to vertical spacing
var borderSpacing_local_var_parse = function parse(v) {
  if (v === '' || v === null) {
    return undefined;
  }

  if (v.toLowerCase() === 'inherit') {
    return v;
  }

  var parts = v.split(/\s+/);

  if (parts.length !== 1 && parts.length !== 2) {
    return undefined;
  }

  parts.forEach(function (part) {
    if (external_dependency_parsers_0.valueType(part) !== external_dependency_parsers_0.TYPES.LENGTH) {
      return undefined;
    }
  });
  return v;
};

borderSpacing_export_isValid = function isValid(v) {
  return borderSpacing_local_var_parse(v) !== undefined;
};

borderSpacing_export_definition = {
  set: function (v) {
    this._setProperty('border-spacing', borderSpacing_local_var_parse(v));
  },
  get: function () {
    return this.getPropertyValue('border-spacing');
  },
  enumerable: true,
  configurable: true
};
var borderTopWidth_export_isValid, borderTopWidth_export_definition;
borderTopWidth_export_isValid = borderWidth_export_isValid;
borderTopWidth_export_definition = {
  set: function (v) {
    if (borderWidth_export_isValid(v)) {
      this._setProperty('border-top-width', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-top-width');
  },
  enumerable: true,
  configurable: true
};
var borderTopStyle_export_isValid, borderTopStyle_export_definition;
borderTopStyle_export_isValid = borderStyle_export_isValid;
borderTopStyle_export_definition = {
  set: function (v) {
    if (borderStyle_export_isValid(v)) {
      if (v.toLowerCase() === 'none') {
        v = '';
        this.removeProperty('border-top-width');
      }

      this._setProperty('border-top-style', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-top-style');
  },
  enumerable: true,
  configurable: true
};
var borderTopColor_export_isValid, borderTopColor_export_definition;
var borderTopColor_local_var_isValid = borderTopColor_export_isValid = borderColor_export_isValid;
borderTopColor_export_definition = {
  set: function (v) {
    if (borderTopColor_local_var_isValid(v)) {
      this._setProperty('border-top-color', v);
    }
  },
  get: function () {
    return this.getPropertyValue('border-top-color');
  },
  enumerable: true,
  configurable: true
};
var borderTop_export_isValid, borderTop_export_definition;
var borderTop_local_var_shorthand_for = {
  'border-top-width': {
    isValid: borderTopWidth_export_isValid,
    definition: borderTopWidth_export_definition
  },
  'border-top-style': {
    isValid: borderTopStyle_export_isValid,
    definition: borderTopStyle_export_definition
  },
  'border-top-color': {
    isValid: borderTopColor_export_isValid,
    definition: borderTopColor_export_definition
  }
};

borderTop_export_isValid = function (v) {
  return external_dependency_parsers_0.shorthandParser(v, borderTop_local_var_shorthand_for) !== undefined;
};

borderTop_export_definition = {
  set: external_dependency_parsers_0.shorthandSetter('border-top', borderTop_local_var_shorthand_for),
  get: external_dependency_parsers_0.shorthandGetter('border-top', borderTop_local_var_shorthand_for),
  enumerable: true,
  configurable: true
};
var borderTopLeftRadius_export_definition;
borderTopLeftRadius_export_definition = {
  set: function (v) {
    this._setProperty('border-top-left-radius', v);
  },
  get: function () {
    return this.getPropertyValue('border-top-left-radius');
  },
  enumerable: true,
  configurable: true
};
var borderTopRightRadius_export_definition;
borderTopRightRadius_export_definition = {
  set: function (v) {
    this._setProperty('border-top-right-radius', v);
  },
  get: function () {
    return this.getPropertyValue('border-top-right-radius');
  },
  enumerable: true,
  configurable: true
};
var bottom_export_definition;
bottom_export_definition = {
  set: function (v) {
    this._setProperty('bottom', external_dependency_parsers_0.parseMeasurement(v));
  },
  get: function () {
    return this.getPropertyValue('bottom');
  },
  enumerable: true,
  configurable: true
};
var boxShadow_export_definition;
boxShadow_export_definition = {
  set: function (v) {
    this._setProperty('box-shadow', v);
  },
  get: function () {
    return this.getPropertyValue('box-shadow');
  },
  enumerable: true,
  configurable: true
};
var boxSizing_export_definition;
boxSizing_export_definition = {
  set: function (v) {
    this._setProperty('box-sizing', v);
  },
  get: function () {
    return this.getPropertyValue('box-sizing');
  },
  enumerable: true,
  configurable: true
};
var captionSide_export_definition;
captionSide_export_definition = {
  set: function (v) {
    this._setProperty('caption-side', v);
  },
  get: function () {
    return this.getPropertyValue('caption-side');
  },
  enumerable: true,
  configurable: true
};
var clear_export_definition;
var clear_local_var_clear_keywords = ['none', 'left', 'right', 'both', 'inherit'];
clear_export_definition = {
  set: function (v) {
    this._setProperty('clear', external_dependency_parsers_0.parseKeyword(v, clear_local_var_clear_keywords));
  },
  get: function () {
    return this.getPropertyValue('clear');
  },
  enumerable: true,
  configurable: true
};
var clip_export_definition;
/*jslint regexp: true*/var clip_local_var_shape_regex = /^rect\((.*)\)$/i; /*jslint regexp: false*/

var clip_local_var_parse = function (val) {
  if (val === '' || val === null) {
    return val;
  }

  if (typeof val !== 'string') {
    return undefined;
  }

  val = val.toLowerCase();

  if (val === 'auto' || val === 'inherit') {
    return val;
  }

  var matches = val.match(clip_local_var_shape_regex);

  if (!matches) {
    return undefined;
  }

  var parts = matches[1].split(/\s*,\s*/);

  if (parts.length !== 4) {
    return undefined;
  }

  var valid = parts.every(function (part, index) {
    var measurement = external_dependency_parsers_0.parseMeasurement(part);
    parts[index] = measurement;
    return measurement !== undefined;
  });

  if (!valid) {
    return undefined;
  }

  parts = parts.join(', ');
  return val.replace(matches[1], parts);
};

clip_export_definition = {
  set: function (v) {
    this._setProperty('clip', clip_local_var_parse(v));
  },
  get: function () {
    return this.getPropertyValue('clip');
  },
  enumerable: true,
  configurable: true
};
var color_export_definition;
color_export_definition = {
  set: function (v) {
    this._setProperty('color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('color');
  },
  enumerable: true,
  configurable: true
};
var colorInterpolation_export_definition;
colorInterpolation_export_definition = {
  set: function (v) {
    this._setProperty('color-interpolation', v);
  },
  get: function () {
    return this.getPropertyValue('color-interpolation');
  },
  enumerable: true,
  configurable: true
};
var colorInterpolationFilters_export_definition;
colorInterpolationFilters_export_definition = {
  set: function (v) {
    this._setProperty('color-interpolation-filters', v);
  },
  get: function () {
    return this.getPropertyValue('color-interpolation-filters');
  },
  enumerable: true,
  configurable: true
};
var colorProfile_export_definition;
colorProfile_export_definition = {
  set: function (v) {
    this._setProperty('color-profile', v);
  },
  get: function () {
    return this.getPropertyValue('color-profile');
  },
  enumerable: true,
  configurable: true
};
var colorRendering_export_definition;
colorRendering_export_definition = {
  set: function (v) {
    this._setProperty('color-rendering', v);
  },
  get: function () {
    return this.getPropertyValue('color-rendering');
  },
  enumerable: true,
  configurable: true
};
var content_export_definition;
content_export_definition = {
  set: function (v) {
    this._setProperty('content', v);
  },
  get: function () {
    return this.getPropertyValue('content');
  },
  enumerable: true,
  configurable: true
};
var counterIncrement_export_definition;
counterIncrement_export_definition = {
  set: function (v) {
    this._setProperty('counter-increment', v);
  },
  get: function () {
    return this.getPropertyValue('counter-increment');
  },
  enumerable: true,
  configurable: true
};
var counterReset_export_definition;
counterReset_export_definition = {
  set: function (v) {
    this._setProperty('counter-reset', v);
  },
  get: function () {
    return this.getPropertyValue('counter-reset');
  },
  enumerable: true,
  configurable: true
};
var cssFloat_export_definition;
cssFloat_export_definition = {
  set: function (v) {
    this._setProperty('float', v);
  },
  get: function () {
    return this.getPropertyValue('float');
  },
  enumerable: true,
  configurable: true
};
var cue_export_definition;
cue_export_definition = {
  set: function (v) {
    this._setProperty('cue', v);
  },
  get: function () {
    return this.getPropertyValue('cue');
  },
  enumerable: true,
  configurable: true
};
var cueAfter_export_definition;
cueAfter_export_definition = {
  set: function (v) {
    this._setProperty('cue-after', v);
  },
  get: function () {
    return this.getPropertyValue('cue-after');
  },
  enumerable: true,
  configurable: true
};
var cueBefore_export_definition;
cueBefore_export_definition = {
  set: function (v) {
    this._setProperty('cue-before', v);
  },
  get: function () {
    return this.getPropertyValue('cue-before');
  },
  enumerable: true,
  configurable: true
};
var cursor_export_definition;
cursor_export_definition = {
  set: function (v) {
    this._setProperty('cursor', v);
  },
  get: function () {
    return this.getPropertyValue('cursor');
  },
  enumerable: true,
  configurable: true
};
var direction_export_definition;
direction_export_definition = {
  set: function (v) {
    this._setProperty('direction', v);
  },
  get: function () {
    return this.getPropertyValue('direction');
  },
  enumerable: true,
  configurable: true
};
var display_export_definition;
display_export_definition = {
  set: function (v) {
    this._setProperty('display', v);
  },
  get: function () {
    return this.getPropertyValue('display');
  },
  enumerable: true,
  configurable: true
};
var dominantBaseline_export_definition;
dominantBaseline_export_definition = {
  set: function (v) {
    this._setProperty('dominant-baseline', v);
  },
  get: function () {
    return this.getPropertyValue('dominant-baseline');
  },
  enumerable: true,
  configurable: true
};
var elevation_export_definition;
elevation_export_definition = {
  set: function (v) {
    this._setProperty('elevation', v);
  },
  get: function () {
    return this.getPropertyValue('elevation');
  },
  enumerable: true,
  configurable: true
};
var emptyCells_export_definition;
emptyCells_export_definition = {
  set: function (v) {
    this._setProperty('empty-cells', v);
  },
  get: function () {
    return this.getPropertyValue('empty-cells');
  },
  enumerable: true,
  configurable: true
};
var enableBackground_export_definition;
enableBackground_export_definition = {
  set: function (v) {
    this._setProperty('enable-background', v);
  },
  get: function () {
    return this.getPropertyValue('enable-background');
  },
  enumerable: true,
  configurable: true
};
var fill_export_definition;
fill_export_definition = {
  set: function (v) {
    this._setProperty('fill', v);
  },
  get: function () {
    return this.getPropertyValue('fill');
  },
  enumerable: true,
  configurable: true
};
var fillOpacity_export_definition;
fillOpacity_export_definition = {
  set: function (v) {
    this._setProperty('fill-opacity', v);
  },
  get: function () {
    return this.getPropertyValue('fill-opacity');
  },
  enumerable: true,
  configurable: true
};
var fillRule_export_definition;
fillRule_export_definition = {
  set: function (v) {
    this._setProperty('fill-rule', v);
  },
  get: function () {
    return this.getPropertyValue('fill-rule');
  },
  enumerable: true,
  configurable: true
};
var filter_export_definition;
filter_export_definition = {
  set: function (v) {
    this._setProperty('filter', v);
  },
  get: function () {
    return this.getPropertyValue('filter');
  },
  enumerable: true,
  configurable: true
};
var floodColor_export_definition;
floodColor_export_definition = {
  set: function (v) {
    this._setProperty('flood-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('flood-color');
  },
  enumerable: true,
  configurable: true
};
var floodOpacity_export_definition;
floodOpacity_export_definition = {
  set: function (v) {
    this._setProperty('flood-opacity', v);
  },
  get: function () {
    return this.getPropertyValue('flood-opacity');
  },
  enumerable: true,
  configurable: true
};
var fontFamily_export_isValid, fontFamily_export_definition;
var fontFamily_local_var_partsRegEx = /\s*,\s*/;

fontFamily_export_isValid = function isValid(v) {
  if (v === '' || v === null) {
    return true;
  }

  var parts = v.split(fontFamily_local_var_partsRegEx);
  var len = parts.length;
  var i;
  var type;

  for (i = 0; i < len; i++) {
    type = external_dependency_parsers_0.valueType(parts[i]);

    if (type === external_dependency_parsers_0.TYPES.STRING || type === external_dependency_parsers_0.TYPES.KEYWORD) {
      return true;
    }
  }

  return false;
};

fontFamily_export_definition = {
  set: function (v) {
    this._setProperty('font-family', v);
  },
  get: function () {
    return this.getPropertyValue('font-family');
  },
  enumerable: true,
  configurable: true
};
var fontSize_export_isValid, fontSize_export_definition;
var fontSize_local_var_absoluteSizes = ['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'];
var fontSize_local_var_relativeSizes = ['larger', 'smaller'];

fontSize_export_isValid = function (v) {
  var type = external_dependency_parsers_0.valueType(v.toLowerCase());
  return type === external_dependency_parsers_0.TYPES.LENGTH || type === external_dependency_parsers_0.TYPES.PERCENT || type === external_dependency_parsers_0.TYPES.KEYWORD && fontSize_local_var_absoluteSizes.indexOf(v.toLowerCase()) !== -1 || type === external_dependency_parsers_0.TYPES.KEYWORD && fontSize_local_var_relativeSizes.indexOf(v.toLowerCase()) !== -1;
};

fontSize_export_definition = {
  set: function (v) {
    this._setProperty('font-size', v);
  },
  get: function () {
    return this.getPropertyValue('font-size');
  },
  enumerable: true,
  configurable: true
};
var fontStyle_export_isValid, fontStyle_export_definition;
var fontStyle_local_var_valid_styles = ['normal', 'italic', 'oblique', 'inherit'];

fontStyle_export_isValid = function (v) {
  return fontStyle_local_var_valid_styles.indexOf(v.toLowerCase()) !== -1;
};

fontStyle_export_definition = {
  set: function (v) {
    this._setProperty('font-style', v);
  },
  get: function () {
    return this.getPropertyValue('font-style');
  },
  enumerable: true,
  configurable: true
};
var fontVariant_export_isValid, fontVariant_export_definition;
var fontVariant_local_var_valid_variants = ['normal', 'small-caps', 'inherit'];

fontVariant_export_isValid = function isValid(v) {
  return fontVariant_local_var_valid_variants.indexOf(v.toLowerCase()) !== -1;
};

fontVariant_export_definition = {
  set: function (v) {
    this._setProperty('font-variant', v);
  },
  get: function () {
    return this.getPropertyValue('font-variant');
  },
  enumerable: true,
  configurable: true
};
var fontWeight_export_isValid, fontWeight_export_definition;
var fontWeight_local_var_valid_weights = ['normal', 'bold', 'bolder', 'lighter', '100', '200', '300', '400', '500', '600', '700', '800', '900', 'inherit'];

fontWeight_export_isValid = function isValid(v) {
  return fontWeight_local_var_valid_weights.indexOf(v.toLowerCase()) !== -1;
};

fontWeight_export_definition = {
  set: function (v) {
    this._setProperty('font-weight', v);
  },
  get: function () {
    return this.getPropertyValue('font-weight');
  },
  enumerable: true,
  configurable: true
};
var lineHeight_export_isValid, lineHeight_export_definition;

lineHeight_export_isValid = function isValid(v) {
  var type = external_dependency_parsers_0.valueType(v);
  return type === external_dependency_parsers_0.TYPES.KEYWORD && v.toLowerCase() === 'normal' || v.toLowerCase() === 'inherit' || type === external_dependency_parsers_0.TYPES.NUMBER || type === external_dependency_parsers_0.TYPES.LENGTH || type === external_dependency_parsers_0.TYPES.PERCENT;
};

lineHeight_export_definition = {
  set: function (v) {
    this._setProperty('line-height', v);
  },
  get: function () {
    return this.getPropertyValue('line-height');
  },
  enumerable: true,
  configurable: true
};
var font_export_isValid, font_export_definition;
var font_local_var_shorthand_for = {
  'font-family': {
    isValid: fontFamily_export_isValid,
    definition: fontFamily_export_definition
  },
  'font-size': {
    isValid: fontSize_export_isValid,
    definition: fontSize_export_definition
  },
  'font-style': {
    isValid: fontStyle_export_isValid,
    definition: fontStyle_export_definition
  },
  'font-variant': {
    isValid: fontVariant_export_isValid,
    definition: fontVariant_export_definition
  },
  'font-weight': {
    isValid: fontWeight_export_isValid,
    definition: fontWeight_export_definition
  },
  'line-height': {
    isValid: lineHeight_export_isValid,
    definition: lineHeight_export_definition
  }
};
var font_local_var_static_fonts = ['caption', 'icon', 'menu', 'message-box', 'small-caption', 'status-bar', 'inherit'];

font_export_isValid = function isValid(v) {
  return external_dependency_parsers_0.shorthandParser(v, font_local_var_shorthand_for) !== undefined || external_dependency_parsers_0.valueType(v) === external_dependency_parsers_0.TYPES.KEYWORD && font_local_var_static_fonts.indexOf(v.toLowerCase()) !== -1;
};

var font_local_var_setter = external_dependency_parsers_0.shorthandSetter('font', font_local_var_shorthand_for);
font_export_definition = {
  set: function (v) {
    var short = external_dependency_parsers_0.shorthandParser(v, font_local_var_shorthand_for);

    if (short !== undefined) {
      return font_local_var_setter.call(this, v);
    }

    if (external_dependency_parsers_0.valueType(v) === external_dependency_parsers_0.TYPES.KEYWORD && font_local_var_static_fonts.indexOf(v.toLowerCase()) !== -1) {
      this._setProperty('font', v);
    }
  },
  get: external_dependency_parsers_0.shorthandGetter('font', font_local_var_shorthand_for),
  enumerable: true,
  configurable: true
};
var fontSizeAdjust_export_definition;
fontSizeAdjust_export_definition = {
  set: function (v) {
    this._setProperty('font-size-adjust', v);
  },
  get: function () {
    return this.getPropertyValue('font-size-adjust');
  },
  enumerable: true,
  configurable: true
};
var fontStretch_export_definition;
fontStretch_export_definition = {
  set: function (v) {
    this._setProperty('font-stretch', v);
  },
  get: function () {
    return this.getPropertyValue('font-stretch');
  },
  enumerable: true,
  configurable: true
};
var glyphOrientationHorizontal_export_definition;
glyphOrientationHorizontal_export_definition = {
  set: function (v) {
    this._setProperty('glyph-orientation-horizontal', v);
  },
  get: function () {
    return this.getPropertyValue('glyph-orientation-horizontal');
  },
  enumerable: true,
  configurable: true
};
var glyphOrientationVertical_export_definition;
glyphOrientationVertical_export_definition = {
  set: function (v) {
    this._setProperty('glyph-orientation-vertical', v);
  },
  get: function () {
    return this.getPropertyValue('glyph-orientation-vertical');
  },
  enumerable: true,
  configurable: true
};
var height_export_definition;

function parse(v) {
  if (String(v).toLowerCase() === 'auto') {
    return 'auto';
  }

  if (String(v).toLowerCase() === 'inherit') {
    return 'inherit';
  }

  return external_dependency_parsers_0.parseMeasurement(v);
}

height_export_definition = {
  set: function (v) {
    this._setProperty('height', parse(v));
  },
  get: function () {
    return this.getPropertyValue('height');
  },
  enumerable: true,
  configurable: true
};
var imageRendering_export_definition;
imageRendering_export_definition = {
  set: function (v) {
    this._setProperty('image-rendering', v);
  },
  get: function () {
    return this.getPropertyValue('image-rendering');
  },
  enumerable: true,
  configurable: true
};
var kerning_export_definition;
kerning_export_definition = {
  set: function (v) {
    this._setProperty('kerning', v);
  },
  get: function () {
    return this.getPropertyValue('kerning');
  },
  enumerable: true,
  configurable: true
};
var left_export_definition;
left_export_definition = {
  set: function (v) {
    this._setProperty('left', external_dependency_parsers_0.parseMeasurement(v));
  },
  get: function () {
    return this.getPropertyValue('left');
  },
  enumerable: true,
  configurable: true
};
var letterSpacing_export_definition;
letterSpacing_export_definition = {
  set: function (v) {
    this._setProperty('letter-spacing', v);
  },
  get: function () {
    return this.getPropertyValue('letter-spacing');
  },
  enumerable: true,
  configurable: true
};
var lightingColor_export_definition;
lightingColor_export_definition = {
  set: function (v) {
    this._setProperty('lighting-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('lighting-color');
  },
  enumerable: true,
  configurable: true
};
var listStyle_export_definition;
listStyle_export_definition = {
  set: function (v) {
    this._setProperty('list-style', v);
  },
  get: function () {
    return this.getPropertyValue('list-style');
  },
  enumerable: true,
  configurable: true
};
var listStyleImage_export_definition;
listStyleImage_export_definition = {
  set: function (v) {
    this._setProperty('list-style-image', v);
  },
  get: function () {
    return this.getPropertyValue('list-style-image');
  },
  enumerable: true,
  configurable: true
};
var listStylePosition_export_definition;
listStylePosition_export_definition = {
  set: function (v) {
    this._setProperty('list-style-position', v);
  },
  get: function () {
    return this.getPropertyValue('list-style-position');
  },
  enumerable: true,
  configurable: true
};
var listStyleType_export_definition;
listStyleType_export_definition = {
  set: function (v) {
    this._setProperty('list-style-type', v);
  },
  get: function () {
    return this.getPropertyValue('list-style-type');
  },
  enumerable: true,
  configurable: true
};
var margin_export_definition, margin_export_isValid, margin_export_parser;
var margin_local_var_TYPES = external_dependency_parsers_0.TYPES;

var margin_local_var_isValid = function (v) {
  if (v.toLowerCase() === "auto") {
    return true;
  }

  var type = external_dependency_parsers_0.valueType(v);
  return type === margin_local_var_TYPES.LENGTH || type === margin_local_var_TYPES.PERCENT || type === margin_local_var_TYPES.INTEGER && (v === '0' || v === 0);
};

var margin_local_var_parser = function (v) {
  var V = v.toLowerCase();

  if (V === "auto") {
    return V;
  }

  return external_dependency_parsers_0.parseMeasurement(v);
};

var margin_local_var_mySetter = external_dependency_parsers_0.implicitSetter('margin', '', margin_local_var_isValid, margin_local_var_parser);
var margin_local_var_myGlobal = external_dependency_parsers_0.implicitSetter('margin', '', function () {
  return true;
}, function (v) {
  return v;
});
margin_export_definition = {
  set: function (v) {
    if (typeof v === "number") {
      v = String(v);
    }

    if (typeof v !== "string") {
      return;
    }

    var V = v.toLowerCase();

    switch (V) {
      case 'inherit':
      case 'initial':
      case 'unset':
      case '':
        margin_local_var_myGlobal.call(this, V);
        break;

      default:
        margin_local_var_mySetter.call(this, v);
        break;
    }
  },
  get: function () {
    return this.getPropertyValue('margin');
  },
  enumerable: true,
  configurable: true
};
margin_export_isValid = margin_local_var_isValid;
margin_export_parser = margin_local_var_parser;
var marginBottom_export_definition;
marginBottom_export_definition = {
  set: external_dependency_parsers_0.subImplicitSetter('margin', 'bottom', {
    definition: margin_export_definition,
    isValid: margin_export_isValid,
    parser: margin_export_parser
  }.isValid, {
    definition: margin_export_definition,
    isValid: margin_export_isValid,
    parser: margin_export_parser
  }.parser),
  get: function () {
    return this.getPropertyValue('margin-bottom');
  },
  enumerable: true,
  configurable: true
};
var marginLeft_export_definition;
marginLeft_export_definition = {
  set: external_dependency_parsers_0.subImplicitSetter('margin', 'left', {
    definition: margin_export_definition,
    isValid: margin_export_isValid,
    parser: margin_export_parser
  }.isValid, {
    definition: margin_export_definition,
    isValid: margin_export_isValid,
    parser: margin_export_parser
  }.parser),
  get: function () {
    return this.getPropertyValue('margin-left');
  },
  enumerable: true,
  configurable: true
};
var marginRight_export_definition;
marginRight_export_definition = {
  set: external_dependency_parsers_0.subImplicitSetter('margin', 'right', {
    definition: margin_export_definition,
    isValid: margin_export_isValid,
    parser: margin_export_parser
  }.isValid, {
    definition: margin_export_definition,
    isValid: margin_export_isValid,
    parser: margin_export_parser
  }.parser),
  get: function () {
    return this.getPropertyValue('margin-right');
  },
  enumerable: true,
  configurable: true
};
var marginTop_export_definition;
marginTop_export_definition = {
  set: external_dependency_parsers_0.subImplicitSetter('margin', 'top', {
    definition: margin_export_definition,
    isValid: margin_export_isValid,
    parser: margin_export_parser
  }.isValid, {
    definition: margin_export_definition,
    isValid: margin_export_isValid,
    parser: margin_export_parser
  }.parser),
  get: function () {
    return this.getPropertyValue('margin-top');
  },
  enumerable: true,
  configurable: true
};
var marker_export_definition;
marker_export_definition = {
  set: function (v) {
    this._setProperty('marker', v);
  },
  get: function () {
    return this.getPropertyValue('marker');
  },
  enumerable: true,
  configurable: true
};
var markerEnd_export_definition;
markerEnd_export_definition = {
  set: function (v) {
    this._setProperty('marker-end', v);
  },
  get: function () {
    return this.getPropertyValue('marker-end');
  },
  enumerable: true,
  configurable: true
};
var markerMid_export_definition;
markerMid_export_definition = {
  set: function (v) {
    this._setProperty('marker-mid', v);
  },
  get: function () {
    return this.getPropertyValue('marker-mid');
  },
  enumerable: true,
  configurable: true
};
var markerOffset_export_definition;
markerOffset_export_definition = {
  set: function (v) {
    this._setProperty('marker-offset', v);
  },
  get: function () {
    return this.getPropertyValue('marker-offset');
  },
  enumerable: true,
  configurable: true
};
var markerStart_export_definition;
markerStart_export_definition = {
  set: function (v) {
    this._setProperty('marker-start', v);
  },
  get: function () {
    return this.getPropertyValue('marker-start');
  },
  enumerable: true,
  configurable: true
};
var marks_export_definition;
marks_export_definition = {
  set: function (v) {
    this._setProperty('marks', v);
  },
  get: function () {
    return this.getPropertyValue('marks');
  },
  enumerable: true,
  configurable: true
};
var mask_export_definition;
mask_export_definition = {
  set: function (v) {
    this._setProperty('mask', v);
  },
  get: function () {
    return this.getPropertyValue('mask');
  },
  enumerable: true,
  configurable: true
};
var maxHeight_export_definition;
maxHeight_export_definition = {
  set: function (v) {
    this._setProperty('max-height', v);
  },
  get: function () {
    return this.getPropertyValue('max-height');
  },
  enumerable: true,
  configurable: true
};
var maxWidth_export_definition;
maxWidth_export_definition = {
  set: function (v) {
    this._setProperty('max-width', v);
  },
  get: function () {
    return this.getPropertyValue('max-width');
  },
  enumerable: true,
  configurable: true
};
var minHeight_export_definition;
minHeight_export_definition = {
  set: function (v) {
    this._setProperty('min-height', v);
  },
  get: function () {
    return this.getPropertyValue('min-height');
  },
  enumerable: true,
  configurable: true
};
var minWidth_export_definition;
minWidth_export_definition = {
  set: function (v) {
    this._setProperty('min-width', v);
  },
  get: function () {
    return this.getPropertyValue('min-width');
  },
  enumerable: true,
  configurable: true
};
var opacity_export_definition;
opacity_export_definition = {
  set: function (v) {
    this._setProperty('opacity', external_dependency_parsers_0.parseNumber(v));
  },
  get: function () {
    return this.getPropertyValue('opacity');
  },
  enumerable: true,
  configurable: true
};
var orphans_export_definition;
orphans_export_definition = {
  set: function (v) {
    this._setProperty('orphans', v);
  },
  get: function () {
    return this.getPropertyValue('orphans');
  },
  enumerable: true,
  configurable: true
};
var outline_export_definition;
outline_export_definition = {
  set: function (v) {
    this._setProperty('outline', v);
  },
  get: function () {
    return this.getPropertyValue('outline');
  },
  enumerable: true,
  configurable: true
};
var outlineColor_export_definition;
outlineColor_export_definition = {
  set: function (v) {
    this._setProperty('outline-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('outline-color');
  },
  enumerable: true,
  configurable: true
};
var outlineOffset_export_definition;
outlineOffset_export_definition = {
  set: function (v) {
    this._setProperty('outline-offset', v);
  },
  get: function () {
    return this.getPropertyValue('outline-offset');
  },
  enumerable: true,
  configurable: true
};
var outlineStyle_export_definition;
outlineStyle_export_definition = {
  set: function (v) {
    this._setProperty('outline-style', v);
  },
  get: function () {
    return this.getPropertyValue('outline-style');
  },
  enumerable: true,
  configurable: true
};
var outlineWidth_export_definition;
outlineWidth_export_definition = {
  set: function (v) {
    this._setProperty('outline-width', v);
  },
  get: function () {
    return this.getPropertyValue('outline-width');
  },
  enumerable: true,
  configurable: true
};
var overflow_export_definition;
overflow_export_definition = {
  set: function (v) {
    this._setProperty('overflow', v);
  },
  get: function () {
    return this.getPropertyValue('overflow');
  },
  enumerable: true,
  configurable: true
};
var overflowX_export_definition;
overflowX_export_definition = {
  set: function (v) {
    this._setProperty('overflow-x', v);
  },
  get: function () {
    return this.getPropertyValue('overflow-x');
  },
  enumerable: true,
  configurable: true
};
var overflowY_export_definition;
overflowY_export_definition = {
  set: function (v) {
    this._setProperty('overflow-y', v);
  },
  get: function () {
    return this.getPropertyValue('overflow-y');
  },
  enumerable: true,
  configurable: true
};
var padding_export_definition, padding_export_isValid, padding_export_parser;
var padding_local_var_TYPES = external_dependency_parsers_0.TYPES;

var padding_local_var_isValid = function (v) {
  var type = external_dependency_parsers_0.valueType(v);
  return type === padding_local_var_TYPES.LENGTH || type === padding_local_var_TYPES.PERCENT || type === padding_local_var_TYPES.INTEGER && (v === '0' || v === 0);
};

var padding_local_var_parser = function (v) {
  return external_dependency_parsers_0.parseMeasurement(v);
};

var padding_local_var_mySetter = external_dependency_parsers_0.implicitSetter('padding', '', padding_local_var_isValid, padding_local_var_parser);
var padding_local_var_myGlobal = external_dependency_parsers_0.implicitSetter('padding', '', function () {
  return true;
}, function (v) {
  return v;
});
padding_export_definition = {
  set: function (v) {
    if (typeof v === "number") {
      v = String(v);
    }

    if (typeof v !== "string") {
      return;
    }

    var V = v.toLowerCase();

    switch (V) {
      case 'inherit':
      case 'initial':
      case 'unset':
      case '':
        padding_local_var_myGlobal.call(this, V);
        break;

      default:
        padding_local_var_mySetter.call(this, v);
        break;
    }
  },
  get: function () {
    return this.getPropertyValue('padding');
  },
  enumerable: true,
  configurable: true
};
padding_export_isValid = padding_local_var_isValid;
padding_export_parser = padding_local_var_parser;
var paddingBottom_export_definition;
paddingBottom_export_definition = {
  set: external_dependency_parsers_0.subImplicitSetter('padding', 'bottom', {
    definition: padding_export_definition,
    isValid: padding_export_isValid,
    parser: padding_export_parser
  }.isValid, {
    definition: padding_export_definition,
    isValid: padding_export_isValid,
    parser: padding_export_parser
  }.parser),
  get: function () {
    return this.getPropertyValue('padding-bottom');
  },
  enumerable: true,
  configurable: true
};
var paddingLeft_export_definition;
paddingLeft_export_definition = {
  set: external_dependency_parsers_0.subImplicitSetter('padding', 'left', {
    definition: padding_export_definition,
    isValid: padding_export_isValid,
    parser: padding_export_parser
  }.isValid, {
    definition: padding_export_definition,
    isValid: padding_export_isValid,
    parser: padding_export_parser
  }.parser),
  get: function () {
    return this.getPropertyValue('padding-left');
  },
  enumerable: true,
  configurable: true
};
var paddingRight_export_definition;
paddingRight_export_definition = {
  set: external_dependency_parsers_0.subImplicitSetter('padding', 'right', {
    definition: padding_export_definition,
    isValid: padding_export_isValid,
    parser: padding_export_parser
  }.isValid, {
    definition: padding_export_definition,
    isValid: padding_export_isValid,
    parser: padding_export_parser
  }.parser),
  get: function () {
    return this.getPropertyValue('padding-right');
  },
  enumerable: true,
  configurable: true
};
var paddingTop_export_definition;
paddingTop_export_definition = {
  set: external_dependency_parsers_0.subImplicitSetter('padding', 'top', {
    definition: padding_export_definition,
    isValid: padding_export_isValid,
    parser: padding_export_parser
  }.isValid, {
    definition: padding_export_definition,
    isValid: padding_export_isValid,
    parser: padding_export_parser
  }.parser),
  get: function () {
    return this.getPropertyValue('padding-top');
  },
  enumerable: true,
  configurable: true
};
var page_export_definition;
page_export_definition = {
  set: function (v) {
    this._setProperty('page', v);
  },
  get: function () {
    return this.getPropertyValue('page');
  },
  enumerable: true,
  configurable: true
};
var pageBreakAfter_export_definition;
pageBreakAfter_export_definition = {
  set: function (v) {
    this._setProperty('page-break-after', v);
  },
  get: function () {
    return this.getPropertyValue('page-break-after');
  },
  enumerable: true,
  configurable: true
};
var pageBreakBefore_export_definition;
pageBreakBefore_export_definition = {
  set: function (v) {
    this._setProperty('page-break-before', v);
  },
  get: function () {
    return this.getPropertyValue('page-break-before');
  },
  enumerable: true,
  configurable: true
};
var pageBreakInside_export_definition;
pageBreakInside_export_definition = {
  set: function (v) {
    this._setProperty('page-break-inside', v);
  },
  get: function () {
    return this.getPropertyValue('page-break-inside');
  },
  enumerable: true,
  configurable: true
};
var pause_export_definition;
pause_export_definition = {
  set: function (v) {
    this._setProperty('pause', v);
  },
  get: function () {
    return this.getPropertyValue('pause');
  },
  enumerable: true,
  configurable: true
};
var pauseAfter_export_definition;
pauseAfter_export_definition = {
  set: function (v) {
    this._setProperty('pause-after', v);
  },
  get: function () {
    return this.getPropertyValue('pause-after');
  },
  enumerable: true,
  configurable: true
};
var pauseBefore_export_definition;
pauseBefore_export_definition = {
  set: function (v) {
    this._setProperty('pause-before', v);
  },
  get: function () {
    return this.getPropertyValue('pause-before');
  },
  enumerable: true,
  configurable: true
};
var pitch_export_definition;
pitch_export_definition = {
  set: function (v) {
    this._setProperty('pitch', v);
  },
  get: function () {
    return this.getPropertyValue('pitch');
  },
  enumerable: true,
  configurable: true
};
var pitchRange_export_definition;
pitchRange_export_definition = {
  set: function (v) {
    this._setProperty('pitch-range', v);
  },
  get: function () {
    return this.getPropertyValue('pitch-range');
  },
  enumerable: true,
  configurable: true
};
var playDuring_export_definition;
playDuring_export_definition = {
  set: function (v) {
    this._setProperty('play-during', v);
  },
  get: function () {
    return this.getPropertyValue('play-during');
  },
  enumerable: true,
  configurable: true
};
var pointerEvents_export_definition;
pointerEvents_export_definition = {
  set: function (v) {
    this._setProperty('pointer-events', v);
  },
  get: function () {
    return this.getPropertyValue('pointer-events');
  },
  enumerable: true,
  configurable: true
};
var position_export_definition;
position_export_definition = {
  set: function (v) {
    this._setProperty('position', v);
  },
  get: function () {
    return this.getPropertyValue('position');
  },
  enumerable: true,
  configurable: true
};
var quotes_export_definition;
quotes_export_definition = {
  set: function (v) {
    this._setProperty('quotes', v);
  },
  get: function () {
    return this.getPropertyValue('quotes');
  },
  enumerable: true,
  configurable: true
};
var resize_export_definition;
resize_export_definition = {
  set: function (v) {
    this._setProperty('resize', v);
  },
  get: function () {
    return this.getPropertyValue('resize');
  },
  enumerable: true,
  configurable: true
};
var richness_export_definition;
richness_export_definition = {
  set: function (v) {
    this._setProperty('richness', v);
  },
  get: function () {
    return this.getPropertyValue('richness');
  },
  enumerable: true,
  configurable: true
};
var right_export_definition;
right_export_definition = {
  set: function (v) {
    this._setProperty('right', external_dependency_parsers_0.parseMeasurement(v));
  },
  get: function () {
    return this.getPropertyValue('right');
  },
  enumerable: true,
  configurable: true
};
var shapeRendering_export_definition;
shapeRendering_export_definition = {
  set: function (v) {
    this._setProperty('shape-rendering', v);
  },
  get: function () {
    return this.getPropertyValue('shape-rendering');
  },
  enumerable: true,
  configurable: true
};
var size_export_definition;
size_export_definition = {
  set: function (v) {
    this._setProperty('size', v);
  },
  get: function () {
    return this.getPropertyValue('size');
  },
  enumerable: true,
  configurable: true
};
var speak_export_definition;
speak_export_definition = {
  set: function (v) {
    this._setProperty('speak', v);
  },
  get: function () {
    return this.getPropertyValue('speak');
  },
  enumerable: true,
  configurable: true
};
var speakHeader_export_definition;
speakHeader_export_definition = {
  set: function (v) {
    this._setProperty('speak-header', v);
  },
  get: function () {
    return this.getPropertyValue('speak-header');
  },
  enumerable: true,
  configurable: true
};
var speakNumeral_export_definition;
speakNumeral_export_definition = {
  set: function (v) {
    this._setProperty('speak-numeral', v);
  },
  get: function () {
    return this.getPropertyValue('speak-numeral');
  },
  enumerable: true,
  configurable: true
};
var speakPunctuation_export_definition;
speakPunctuation_export_definition = {
  set: function (v) {
    this._setProperty('speak-punctuation', v);
  },
  get: function () {
    return this.getPropertyValue('speak-punctuation');
  },
  enumerable: true,
  configurable: true
};
var speechRate_export_definition;
speechRate_export_definition = {
  set: function (v) {
    this._setProperty('speech-rate', v);
  },
  get: function () {
    return this.getPropertyValue('speech-rate');
  },
  enumerable: true,
  configurable: true
};
var src_export_definition;
src_export_definition = {
  set: function (v) {
    this._setProperty('src', v);
  },
  get: function () {
    return this.getPropertyValue('src');
  },
  enumerable: true,
  configurable: true
};
var stopColor_export_definition;
stopColor_export_definition = {
  set: function (v) {
    this._setProperty('stop-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('stop-color');
  },
  enumerable: true,
  configurable: true
};
var stopOpacity_export_definition;
stopOpacity_export_definition = {
  set: function (v) {
    this._setProperty('stop-opacity', v);
  },
  get: function () {
    return this.getPropertyValue('stop-opacity');
  },
  enumerable: true,
  configurable: true
};
var stress_export_definition;
stress_export_definition = {
  set: function (v) {
    this._setProperty('stress', v);
  },
  get: function () {
    return this.getPropertyValue('stress');
  },
  enumerable: true,
  configurable: true
};
var stroke_export_definition;
stroke_export_definition = {
  set: function (v) {
    this._setProperty('stroke', v);
  },
  get: function () {
    return this.getPropertyValue('stroke');
  },
  enumerable: true,
  configurable: true
};
var strokeDasharray_export_definition;
strokeDasharray_export_definition = {
  set: function (v) {
    this._setProperty('stroke-dasharray', v);
  },
  get: function () {
    return this.getPropertyValue('stroke-dasharray');
  },
  enumerable: true,
  configurable: true
};
var strokeDashoffset_export_definition;
strokeDashoffset_export_definition = {
  set: function (v) {
    this._setProperty('stroke-dashoffset', v);
  },
  get: function () {
    return this.getPropertyValue('stroke-dashoffset');
  },
  enumerable: true,
  configurable: true
};
var strokeLinecap_export_definition;
strokeLinecap_export_definition = {
  set: function (v) {
    this._setProperty('stroke-linecap', v);
  },
  get: function () {
    return this.getPropertyValue('stroke-linecap');
  },
  enumerable: true,
  configurable: true
};
var strokeLinejoin_export_definition;
strokeLinejoin_export_definition = {
  set: function (v) {
    this._setProperty('stroke-linejoin', v);
  },
  get: function () {
    return this.getPropertyValue('stroke-linejoin');
  },
  enumerable: true,
  configurable: true
};
var strokeMiterlimit_export_definition;
strokeMiterlimit_export_definition = {
  set: function (v) {
    this._setProperty('stroke-miterlimit', v);
  },
  get: function () {
    return this.getPropertyValue('stroke-miterlimit');
  },
  enumerable: true,
  configurable: true
};
var strokeOpacity_export_definition;
strokeOpacity_export_definition = {
  set: function (v) {
    this._setProperty('stroke-opacity', v);
  },
  get: function () {
    return this.getPropertyValue('stroke-opacity');
  },
  enumerable: true,
  configurable: true
};
var strokeWidth_export_definition;
strokeWidth_export_definition = {
  set: function (v) {
    this._setProperty('stroke-width', v);
  },
  get: function () {
    return this.getPropertyValue('stroke-width');
  },
  enumerable: true,
  configurable: true
};
var tableLayout_export_definition;
tableLayout_export_definition = {
  set: function (v) {
    this._setProperty('table-layout', v);
  },
  get: function () {
    return this.getPropertyValue('table-layout');
  },
  enumerable: true,
  configurable: true
};
var textAlign_export_definition;
textAlign_export_definition = {
  set: function (v) {
    this._setProperty('text-align', v);
  },
  get: function () {
    return this.getPropertyValue('text-align');
  },
  enumerable: true,
  configurable: true
};
var textAnchor_export_definition;
textAnchor_export_definition = {
  set: function (v) {
    this._setProperty('text-anchor', v);
  },
  get: function () {
    return this.getPropertyValue('text-anchor');
  },
  enumerable: true,
  configurable: true
};
var textDecoration_export_definition;
textDecoration_export_definition = {
  set: function (v) {
    this._setProperty('text-decoration', v);
  },
  get: function () {
    return this.getPropertyValue('text-decoration');
  },
  enumerable: true,
  configurable: true
};
var textIndent_export_definition;
textIndent_export_definition = {
  set: function (v) {
    this._setProperty('text-indent', v);
  },
  get: function () {
    return this.getPropertyValue('text-indent');
  },
  enumerable: true,
  configurable: true
};
var textLineThrough_export_definition;
textLineThrough_export_definition = {
  set: function (v) {
    this._setProperty('text-line-through', v);
  },
  get: function () {
    return this.getPropertyValue('text-line-through');
  },
  enumerable: true,
  configurable: true
};
var textLineThroughColor_export_definition;
textLineThroughColor_export_definition = {
  set: function (v) {
    this._setProperty('text-line-through-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('text-line-through-color');
  },
  enumerable: true,
  configurable: true
};
var textLineThroughMode_export_definition;
textLineThroughMode_export_definition = {
  set: function (v) {
    this._setProperty('text-line-through-mode', v);
  },
  get: function () {
    return this.getPropertyValue('text-line-through-mode');
  },
  enumerable: true,
  configurable: true
};
var textLineThroughStyle_export_definition;
textLineThroughStyle_export_definition = {
  set: function (v) {
    this._setProperty('text-line-through-style', v);
  },
  get: function () {
    return this.getPropertyValue('text-line-through-style');
  },
  enumerable: true,
  configurable: true
};
var textLineThroughWidth_export_definition;
textLineThroughWidth_export_definition = {
  set: function (v) {
    this._setProperty('text-line-through-width', v);
  },
  get: function () {
    return this.getPropertyValue('text-line-through-width');
  },
  enumerable: true,
  configurable: true
};
var textOverflow_export_definition;
textOverflow_export_definition = {
  set: function (v) {
    this._setProperty('text-overflow', v);
  },
  get: function () {
    return this.getPropertyValue('text-overflow');
  },
  enumerable: true,
  configurable: true
};
var textOverline_export_definition;
textOverline_export_definition = {
  set: function (v) {
    this._setProperty('text-overline', v);
  },
  get: function () {
    return this.getPropertyValue('text-overline');
  },
  enumerable: true,
  configurable: true
};
var textOverlineColor_export_definition;
textOverlineColor_export_definition = {
  set: function (v) {
    this._setProperty('text-overline-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('text-overline-color');
  },
  enumerable: true,
  configurable: true
};
var textOverlineMode_export_definition;
textOverlineMode_export_definition = {
  set: function (v) {
    this._setProperty('text-overline-mode', v);
  },
  get: function () {
    return this.getPropertyValue('text-overline-mode');
  },
  enumerable: true,
  configurable: true
};
var textOverlineStyle_export_definition;
textOverlineStyle_export_definition = {
  set: function (v) {
    this._setProperty('text-overline-style', v);
  },
  get: function () {
    return this.getPropertyValue('text-overline-style');
  },
  enumerable: true,
  configurable: true
};
var textOverlineWidth_export_definition;
textOverlineWidth_export_definition = {
  set: function (v) {
    this._setProperty('text-overline-width', v);
  },
  get: function () {
    return this.getPropertyValue('text-overline-width');
  },
  enumerable: true,
  configurable: true
};
var textRendering_export_definition;
textRendering_export_definition = {
  set: function (v) {
    this._setProperty('text-rendering', v);
  },
  get: function () {
    return this.getPropertyValue('text-rendering');
  },
  enumerable: true,
  configurable: true
};
var textShadow_export_definition;
textShadow_export_definition = {
  set: function (v) {
    this._setProperty('text-shadow', v);
  },
  get: function () {
    return this.getPropertyValue('text-shadow');
  },
  enumerable: true,
  configurable: true
};
var textTransform_export_definition;
textTransform_export_definition = {
  set: function (v) {
    this._setProperty('text-transform', v);
  },
  get: function () {
    return this.getPropertyValue('text-transform');
  },
  enumerable: true,
  configurable: true
};
var textUnderline_export_definition;
textUnderline_export_definition = {
  set: function (v) {
    this._setProperty('text-underline', v);
  },
  get: function () {
    return this.getPropertyValue('text-underline');
  },
  enumerable: true,
  configurable: true
};
var textUnderlineColor_export_definition;
textUnderlineColor_export_definition = {
  set: function (v) {
    this._setProperty('text-underline-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('text-underline-color');
  },
  enumerable: true,
  configurable: true
};
var textUnderlineMode_export_definition;
textUnderlineMode_export_definition = {
  set: function (v) {
    this._setProperty('text-underline-mode', v);
  },
  get: function () {
    return this.getPropertyValue('text-underline-mode');
  },
  enumerable: true,
  configurable: true
};
var textUnderlineStyle_export_definition;
textUnderlineStyle_export_definition = {
  set: function (v) {
    this._setProperty('text-underline-style', v);
  },
  get: function () {
    return this.getPropertyValue('text-underline-style');
  },
  enumerable: true,
  configurable: true
};
var textUnderlineWidth_export_definition;
textUnderlineWidth_export_definition = {
  set: function (v) {
    this._setProperty('text-underline-width', v);
  },
  get: function () {
    return this.getPropertyValue('text-underline-width');
  },
  enumerable: true,
  configurable: true
};
var top_export_definition;
top_export_definition = {
  set: function (v) {
    this._setProperty('top', external_dependency_parsers_0.parseMeasurement(v));
  },
  get: function () {
    return this.getPropertyValue('top');
  },
  enumerable: true,
  configurable: true
};
var unicodeBidi_export_definition;
unicodeBidi_export_definition = {
  set: function (v) {
    this._setProperty('unicode-bidi', v);
  },
  get: function () {
    return this.getPropertyValue('unicode-bidi');
  },
  enumerable: true,
  configurable: true
};
var unicodeRange_export_definition;
unicodeRange_export_definition = {
  set: function (v) {
    this._setProperty('unicode-range', v);
  },
  get: function () {
    return this.getPropertyValue('unicode-range');
  },
  enumerable: true,
  configurable: true
};
var vectorEffect_export_definition;
vectorEffect_export_definition = {
  set: function (v) {
    this._setProperty('vector-effect', v);
  },
  get: function () {
    return this.getPropertyValue('vector-effect');
  },
  enumerable: true,
  configurable: true
};
var verticalAlign_export_definition;
verticalAlign_export_definition = {
  set: function (v) {
    this._setProperty('vertical-align', v);
  },
  get: function () {
    return this.getPropertyValue('vertical-align');
  },
  enumerable: true,
  configurable: true
};
var visibility_export_definition;
visibility_export_definition = {
  set: function (v) {
    this._setProperty('visibility', v);
  },
  get: function () {
    return this.getPropertyValue('visibility');
  },
  enumerable: true,
  configurable: true
};
var voiceFamily_export_definition;
voiceFamily_export_definition = {
  set: function (v) {
    this._setProperty('voic-family', v);
  },
  get: function () {
    return this.getPropertyValue('voice-family');
  },
  enumerable: true,
  configurable: true
};
var volume_export_definition;
volume_export_definition = {
  set: function (v) {
    this._setProperty('volume', v);
  },
  get: function () {
    return this.getPropertyValue('volume');
  },
  enumerable: true,
  configurable: true
};
var webkitAnimation_export_definition;
webkitAnimation_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-animation', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-animation');
  },
  enumerable: true,
  configurable: true
};
var webkitAnimationDelay_export_definition;
webkitAnimationDelay_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-animation-delay', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-animation-delay');
  },
  enumerable: true,
  configurable: true
};
var webkitAnimationDirection_export_definition;
webkitAnimationDirection_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-animation-direction', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-animation-direction');
  },
  enumerable: true,
  configurable: true
};
var webkitAnimationDuration_export_definition;
webkitAnimationDuration_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-animation-duration', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-animation-duration');
  },
  enumerable: true,
  configurable: true
};
var webkitAnimationFillMode_export_definition;
webkitAnimationFillMode_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-animation-fill-mode', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-animation-fill-mode');
  },
  enumerable: true,
  configurable: true
};
var webkitAnimationIterationCount_export_definition;
webkitAnimationIterationCount_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-animation-iteration-count', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-animation-iteration-count');
  },
  enumerable: true,
  configurable: true
};
var webkitAnimationName_export_definition;
webkitAnimationName_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-animation-name', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-animation-name');
  },
  enumerable: true,
  configurable: true
};
var webkitAnimationPlayState_export_definition;
webkitAnimationPlayState_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-animation-play-state', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-animation-play-state');
  },
  enumerable: true,
  configurable: true
};
var webkitAnimationTimingFunction_export_definition;
webkitAnimationTimingFunction_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-animation-timing-function', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-animation-timing-function');
  },
  enumerable: true,
  configurable: true
};
var webkitAppearance_export_definition;
webkitAppearance_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-appearance', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-appearance');
  },
  enumerable: true,
  configurable: true
};
var webkitAspectRatio_export_definition;
webkitAspectRatio_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-aspect-ratio', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-aspect-ratio');
  },
  enumerable: true,
  configurable: true
};
var webkitBackfaceVisibility_export_definition;
webkitBackfaceVisibility_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-backface-visibility', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-backface-visibility');
  },
  enumerable: true,
  configurable: true
};
var webkitBackgroundClip_export_definition;
webkitBackgroundClip_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-background-clip', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-background-clip');
  },
  enumerable: true,
  configurable: true
};
var webkitBackgroundComposite_export_definition;
webkitBackgroundComposite_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-background-composite', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-background-composite');
  },
  enumerable: true,
  configurable: true
};
var webkitBackgroundOrigin_export_definition;
webkitBackgroundOrigin_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-background-origin', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-background-origin');
  },
  enumerable: true,
  configurable: true
};
var webkitBackgroundSize_export_definition;
webkitBackgroundSize_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-background-size', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-background-size');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderAfter_export_definition;
webkitBorderAfter_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-after', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-after');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderAfterColor_export_definition;
webkitBorderAfterColor_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-after-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-after-color');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderAfterStyle_export_definition;
webkitBorderAfterStyle_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-after-style', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-after-style');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderAfterWidth_export_definition;
webkitBorderAfterWidth_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-after-width', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-after-width');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderBefore_export_definition;
webkitBorderBefore_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-before', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-before');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderBeforeColor_export_definition;
webkitBorderBeforeColor_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-before-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-before-color');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderBeforeStyle_export_definition;
webkitBorderBeforeStyle_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-before-style', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-before-style');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderBeforeWidth_export_definition;
webkitBorderBeforeWidth_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-before-width', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-before-width');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderEnd_export_definition;
webkitBorderEnd_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-end', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-end');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderEndColor_export_definition;
webkitBorderEndColor_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-end-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-end-color');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderEndStyle_export_definition;
webkitBorderEndStyle_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-end-style', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-end-style');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderEndWidth_export_definition;
webkitBorderEndWidth_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-end-width', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-end-width');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderFit_export_definition;
webkitBorderFit_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-fit', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-fit');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderHorizontalSpacing_export_definition;
webkitBorderHorizontalSpacing_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-horizontal-spacing', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-horizontal-spacing');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderImage_export_definition;
webkitBorderImage_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-image', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-image');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderRadius_export_definition;
webkitBorderRadius_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-radius', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-radius');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderStart_export_definition;
webkitBorderStart_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-start', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-start');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderStartColor_export_definition;
webkitBorderStartColor_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-start-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-start-color');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderStartStyle_export_definition;
webkitBorderStartStyle_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-start-style', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-start-style');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderStartWidth_export_definition;
webkitBorderStartWidth_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-start-width', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-start-width');
  },
  enumerable: true,
  configurable: true
};
var webkitBorderVerticalSpacing_export_definition;
webkitBorderVerticalSpacing_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-border-vertical-spacing', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-border-vertical-spacing');
  },
  enumerable: true,
  configurable: true
};
var webkitBoxAlign_export_definition;
webkitBoxAlign_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-box-align', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-box-align');
  },
  enumerable: true,
  configurable: true
};
var webkitBoxDirection_export_definition;
webkitBoxDirection_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-box-direction', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-box-direction');
  },
  enumerable: true,
  configurable: true
};
var webkitBoxFlex_export_definition;
webkitBoxFlex_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-box-flex', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-box-flex');
  },
  enumerable: true,
  configurable: true
};
var webkitBoxFlexGroup_export_definition;
webkitBoxFlexGroup_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-box-flex-group', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-box-flex-group');
  },
  enumerable: true,
  configurable: true
};
var webkitBoxLines_export_definition;
webkitBoxLines_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-box-lines', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-box-lines');
  },
  enumerable: true,
  configurable: true
};
var webkitBoxOrdinalGroup_export_definition;
webkitBoxOrdinalGroup_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-box-ordinal-group', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-box-ordinal-group');
  },
  enumerable: true,
  configurable: true
};
var webkitBoxOrient_export_definition;
webkitBoxOrient_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-box-orient', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-box-orient');
  },
  enumerable: true,
  configurable: true
};
var webkitBoxPack_export_definition;
webkitBoxPack_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-box-pack', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-box-pack');
  },
  enumerable: true,
  configurable: true
};
var webkitBoxReflect_export_definition;
webkitBoxReflect_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-box-reflect', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-box-reflect');
  },
  enumerable: true,
  configurable: true
};
var webkitBoxShadow_export_definition;
webkitBoxShadow_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-box-shadow', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-box-shadow');
  },
  enumerable: true,
  configurable: true
};
var webkitColorCorrection_export_definition;
webkitColorCorrection_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-color-correction', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-color-correction');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnAxis_export_definition;
webkitColumnAxis_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-axis', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-axis');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnBreakAfter_export_definition;
webkitColumnBreakAfter_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-break-after', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-break-after');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnBreakBefore_export_definition;
webkitColumnBreakBefore_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-break-before', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-break-before');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnBreakInside_export_definition;
webkitColumnBreakInside_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-break-inside', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-break-inside');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnCount_export_definition;
webkitColumnCount_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-count', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-count');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnGap_export_definition;
webkitColumnGap_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-gap', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-gap');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnRule_export_definition;
webkitColumnRule_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-rule', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-rule');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnRuleColor_export_definition;
webkitColumnRuleColor_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-rule-color', external_dependency_parsers_0.parseColor(v));
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-rule-color');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnRuleStyle_export_definition;
webkitColumnRuleStyle_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-rule-style', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-rule-style');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnRuleWidth_export_definition;
webkitColumnRuleWidth_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-rule-width', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-rule-width');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnSpan_export_definition;
webkitColumnSpan_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-span', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-span');
  },
  enumerable: true,
  configurable: true
};
var webkitColumnWidth_export_definition;
webkitColumnWidth_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-column-width', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-column-width');
  },
  enumerable: true,
  configurable: true
};
var webkitColumns_export_definition;
webkitColumns_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-columns', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-columns');
  },
  enumerable: true,
  configurable: true
};
var webkitFilter_export_definition;
webkitFilter_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-filter', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-filter');
  },
  enumerable: true,
  configurable: true
};
var webkitFlexAlign_export_definition;
webkitFlexAlign_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-flex-align', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-flex-align');
  },
  enumerable: true,
  configurable: true
};
var webkitFlexDirection_export_definition;
webkitFlexDirection_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-flex-direction', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-flex-direction');
  },
  enumerable: true,
  configurable: true
};
var webkitFlexFlow_export_definition;
webkitFlexFlow_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-flex-flow', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-flex-flow');
  },
  enumerable: true,
  configurable: true
};
var webkitFlexItemAlign_export_definition;
webkitFlexItemAlign_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-flex-item-align', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-flex-item-align');
  },
  enumerable: true,
  configurable: true
};
var webkitFlexLinePack_export_definition;
webkitFlexLinePack_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-flex-line-pack', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-flex-line-pack');
  },
  enumerable: true,
  configurable: true
};
var webkitFlexOrder_export_definition;
webkitFlexOrder_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-flex-order', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-flex-order');
  },
  enumerable: true,
  configurable: true
};
var webkitFlexPack_export_definition;
webkitFlexPack_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-flex-pack', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-flex-pack');
  },
  enumerable: true,
  configurable: true
};
var webkitFlexWrap_export_definition;
webkitFlexWrap_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-flex-wrap', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-flex-wrap');
  },
  enumerable: true,
  configurable: true
};
var webkitFlowFrom_export_definition;
webkitFlowFrom_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-flow-from', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-flow-from');
  },
  enumerable: true,
  configurable: true
};
var webkitFlowInto_export_definition;
webkitFlowInto_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-flow-into', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-flow-into');
  },
  enumerable: true,
  configurable: true
};
var webkitFontFeatureSettings_export_definition;
webkitFontFeatureSettings_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-font-feature-settings', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-font-feature-settings');
  },
  enumerable: true,
  configurable: true
};
var webkitFontKerning_export_definition;
webkitFontKerning_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-font-kerning', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-font-kerning');
  },
  enumerable: true,
  configurable: true
};
var webkitFontSizeDelta_export_definition;
webkitFontSizeDelta_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-font-size-delta', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-font-size-delta');
  },
  enumerable: true,
  configurable: true
};
var webkitFontSmoothing_export_definition;
webkitFontSmoothing_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-font-smoothing', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-font-smoothing');
  },
  enumerable: true,
  configurable: true
};
var webkitFontVariantLigatures_export_definition;
webkitFontVariantLigatures_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-font-variant-ligatures', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-font-variant-ligatures');
  },
  enumerable: true,
  configurable: true
};
var webkitHighlight_export_definition;
webkitHighlight_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-highlight', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-highlight');
  },
  enumerable: true,
  configurable: true
};
var webkitHyphenateCharacter_export_definition;
webkitHyphenateCharacter_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-hyphenate-character', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-hyphenate-character');
  },
  enumerable: true,
  configurable: true
};
var webkitHyphenateLimitAfter_export_definition;
webkitHyphenateLimitAfter_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-hyphenate-limit-after', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-hyphenate-limit-after');
  },
  enumerable: true,
  configurable: true
};
var webkitHyphenateLimitBefore_export_definition;
webkitHyphenateLimitBefore_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-hyphenate-limit-before', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-hyphenate-limit-before');
  },
  enumerable: true,
  configurable: true
};
var webkitHyphenateLimitLines_export_definition;
webkitHyphenateLimitLines_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-hyphenate-limit-lines', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-hyphenate-limit-lines');
  },
  enumerable: true,
  configurable: true
};
var webkitHyphens_export_definition;
webkitHyphens_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-hyphens', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-hyphens');
  },
  enumerable: true,
  configurable: true
};
var webkitLineAlign_export_definition;
webkitLineAlign_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-line-align', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-line-align');
  },
  enumerable: true,
  configurable: true
};
var webkitLineBoxContain_export_definition;
webkitLineBoxContain_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-line-box-contain', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-line-box-contain');
  },
  enumerable: true,
  configurable: true
};
var webkitLineBreak_export_definition;
webkitLineBreak_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-line-break', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-line-break');
  },
  enumerable: true,
  configurable: true
};
var webkitLineClamp_export_definition;
webkitLineClamp_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-line-clamp', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-line-clamp');
  },
  enumerable: true,
  configurable: true
};
var webkitLineGrid_export_definition;
webkitLineGrid_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-line-grid', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-line-grid');
  },
  enumerable: true,
  configurable: true
};
var webkitLineSnap_export_definition;
webkitLineSnap_export_definition = {
  set: function (v) {
    this._setProperty('-webkit-line-snap', v);
  },
  get: function () {
    return this.getPropertyValue('-webkit-